{
  "characterSets": {
    "delimiters": "()[]{},;.",
    "identifierContinue": "_abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789",
    "identifierStart": "_abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ",
    "operators": "+-*/%=<>!&|^~?:",
    "whitespace": " \t\n\r\f\u000b"
  },
  "commentConfig": {
    "multiLineCommentDelimiters": [
      {
        "end": "*/",
        "start": "/*"
      }
    ],
    "singleLineCommentStarts": [
      "//",
      "#"
    ]
  },
  "keywords": [
    "nullptr",
    "noexcept",
    "alignof",
    "virtual",
    "typeid",
    "try",
    "constexpr",
    "true",
    "public",
    "this",
    "protected",
    "private",
    "operator",
    "namespace",
    "using",
    "inline",
    "false",
    "explicit",
    "dynamic_cast",
    "static_assert",
    "delete",
    "const_cast",
    "decltype",
    "class",
    "signed",
    "mutable",
    "reinterpret_cast",
    "catch",
    "while",
    "template",
    "volatile",
    "void",
    "thread_local",
    "static_cast",
    "unsigned",
    "export",
    "union",
    "throw",
    "char",
    "typedef",
    "switch",
    "bool",
    "default",
    "struct",
    "new",
    "wchar_t",
    "friend",
    "static",
    "long",
    "sizeof",
    "double",
    "else",
    "enum",
    "short",
    "if",
    "return",
    "float",
    "extern",
    "asm",
    "break",
    "auto",
    "register",
    "alignas",
    "goto",
    "continue",
    "do",
    "int",
    "for",
    "const",
    "typename",
    "case"
  ],
  "name": "C++",
  "numberConfig": {
    "binaryPattern": "",
    "decimalIntPattern": "\\b[0-9]+\\b",
    "floatingPointPattern": "\\b[0-9]+\\.[0-9]+\\b",
    "hexPattern": "\\b0[xX][0-9a-fA-F]+\\b",
    "octalPattern": "\\b0[0-7]+\\b",
    "scientificPattern": "\\b[0-9]+(\\.[0-9]+)?[eE][+-]?[0-9]+\\b"
  },
  "stringConfig": {
    "charDelimiters": [
      {
        "end": "'",
        "start": "'"
      }
    ],
    "escapeChar": "\\",
    "rawStringPrefix": "R",
    "stringDelimiters": [
      {
        "end": "\"",
        "start": "\""
      }
    ]
  },
  "tokenRules": [
    {
      "name": "Identifier",
      "pattern": "[a-zA-Z_][a-zA-Z0-9_]*",
      "precedence": 1,
      "type": 8
    },
    {
      "name": "HexNumber",
      "pattern": "0[xX][0-9a-fA-F]+",
      "precedence": 2,
      "type": 2
    },
    {
      "name": "OctalNumber",
      "pattern": "0[0-7]+",
      "precedence": 2,
      "type": 3
    },
    {
      "name": "ScientificNumber",
      "pattern": "[0-9]+(\\\\.[0-9]+)?[eE][+-]?[0-9]+",
      "precedence": 2,
      "type": 5
    },
    {
      "name": "FloatNumber",
      "pattern": "[0-9]+\\\\.[0-9]+",
      "precedence": 2,
      "type": 1
    },
    {
      "name": "IntNumber",
      "pattern": "[0-9]+",
      "precedence": 2,
      "type": 0
    },
    {
      "name": "BinaryNumber",
      "pattern": "0[bB][01]+",
      "precedence": 2,
      "type": 4
    }
  ],
  "types": [
    "char32_t",
    "char16_t",
    "wchar_t",
    "signed",
    "double",
    "int",
    "bool",
    "float",
    "unsigned",
    "auto",
    "long",
    "short",
    "void",
    "char"
  ],
  "version": "C++17"
}